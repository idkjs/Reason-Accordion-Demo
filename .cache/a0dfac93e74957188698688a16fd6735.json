{"dependencies":[{"name":"bs-platform/lib/js/array.js","loc":{"line":4,"column":38}},{"name":"bs-platform/lib/js/block.js","loc":{"line":5,"column":38}},{"name":"bs-platform/lib/js/pervasives.js","loc":{"line":6,"column":38}},{"name":"bs-platform/lib/js/js_primitive.js","loc":{"line":7,"column":38}},{"name":"bs-platform/lib/js/caml_builtin_exceptions.js","loc":{"line":8,"column":38}}],"generated":{"js":"// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array                 = require(\"bs-platform/lib/js/array.js\");\nvar Block                   = require(\"bs-platform/lib/js/block.js\");\nvar Pervasives              = require(\"bs-platform/lib/js/pervasives.js\");\nvar Js_primitive            = require(\"bs-platform/lib/js/js_primitive.js\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction unwrapElement(param) {\n  if (param) {\n    return param[0];\n  } else {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Passed none to unwrap\"\n        ];\n  }\n}\n\nfunction getClassList(item) {\n  return item.classList;\n}\n\nfunction toggleClasses(newClass, oldClass, classList) {\n  classList.add(newClass);\n  classList.remove(oldClass);\n  return /* () */0;\n}\n\nfunction toggle(toggleAction) {\n  if (toggleAction.tag) {\n    var item = toggleAction[0];\n    var maxHeight = \"max-height:\" + (toggleAction[1] + \"px\");\n    item.setAttribute(\"style\", maxHeight);\n    return toggleClasses(\"collapsed\", \"expanded\", item.classList);\n  } else {\n    var item$1 = toggleAction[0];\n    var maxHeight$1 = \"max-height:\" + (toggleAction[1] + \"px\");\n    item$1.setAttribute(\"style\", maxHeight$1);\n    return toggleClasses(\"expanded\", \"collapsed\", item$1.classList);\n  }\n}\n\nvar accordion = unwrapElement(Js_primitive.null_undefined_to_opt(document.querySelector(\".accordion\")));\n\nvar sections = accordion.querySelectorAll(\".section\");\n\nfunction getSectionElement(withClass, section) {\n  return unwrapElement(Js_primitive.null_undefined_to_opt(section.querySelector(withClass)));\n}\n\nfunction getHeight(element) {\n  return element.clientHeight;\n}\n\nfunction handleHeaderClick(e, headerHeight, contentHeight) {\n  var element = e.target;\n  var section = element.closest(\".section\");\n  var match = +section.classList.contains(\"collapsed\");\n  if (match !== 0) {\n    return toggle(/* Expand */Block.__(0, [\n                  section,\n                  Pervasives.string_of_int(headerHeight + contentHeight | 0)\n                ]));\n  } else {\n    return toggle(/* Collapse */Block.__(1, [\n                  section,\n                  Pervasives.string_of_int(headerHeight)\n                ]));\n  }\n}\n\nfunction composeItem(node) {\n  var header = getSectionElement(\".header\", node);\n  var content = getSectionElement(\".content\", node);\n  var headerHeight = header.clientHeight;\n  var contentHeight = content.clientHeight;\n  var match = +node.classList.contains(\"collapsed\");\n  var intialHeight = match !== 0 ? headerHeight : contentHeight;\n  node.setAttribute(\"style\", \"max-height:\" + (Pervasives.string_of_int(intialHeight) + \"px\"));\n  header.addEventListener(\"click\", (function (e) {\n          return handleHeaderClick(e, headerHeight, contentHeight);\n        }));\n  return /* record */[\n          /* header */header,\n          /* content */content,\n          /* headerHeight */header.clientHeight,\n          /* contentHeight */content.clientHeight,\n          /* el */unwrapElement(Js_primitive.null_undefined_to_opt(node.parentElement))\n        ];\n}\n\nvar accordionElements = $$Array.map(composeItem, Array.prototype.slice.call(sections));\n\nexports.unwrapElement     = unwrapElement;\nexports.getClassList      = getClassList;\nexports.toggleClasses     = toggleClasses;\nexports.toggle            = toggle;\nexports.accordion         = accordion;\nexports.sections          = sections;\nexports.getSectionElement = getSectionElement;\nexports.getHeight         = getHeight;\nexports.handleHeaderClick = handleHeaderClick;\nexports.composeItem       = composeItem;\nexports.accordionElements = accordionElements;\n/* accordion Not a pure module */\n"},"hash":"55f166062cad8888a96e04cc20947af0"}